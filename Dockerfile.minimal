# Multi-stage Dockerfile for Spring Boot application (Minimal version)
# NOTE: This version does not include OCR and image processing dependencies.
# If your application requires these features, install them manually on the host:
# For Debian/Ubuntu:
#   apt-get update && apt-get install -y tesseract-ocr tesseract-ocr-chi-sim tesseract-ocr-eng ffmpeg
# For CentOS/RHEL:
#   yum install -y tesseract ffmpeg

#######################
# Build stage
#######################
FROM eclipse-temurin:17-jdk-slim AS build

WORKDIR /app

# 安装wget用于健康检查
RUN apt-get update && apt-get install -y wget && rm -rf /var/lib/apt/lists/*

# Copy Maven wrapper and pom.xml first for better layer caching
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Make mvnw executable
RUN chmod +x ./mvnw

# Backup original pom.xml and modify Java version
RUN cp pom.xml pom.xml.original && \
    sed -i 's/<java.version>21<\/java.version>/<java.version>17<\/java.version>/g' pom.xml && \
    sed -i 's/<source>21<\/source>/<source>17<\/source>/g' pom.xml && \
    sed -i 's/<target>21<\/target>/<target>17<\/target>/g' pom.xml

# Copy application source code
COPY src src

# Build the application with explicit Java 17 settings
RUN ./mvnw clean package -DskipTests \
    -Dmaven.compiler.source=17 \
    -Dmaven.compiler.target=17 \
    -Djava.version=17

#######################
# Runtime stage
#######################
FROM eclipse-temurin:17-jre-slim

# Set the working directory
WORKDIR /app

# 安装wget用于健康检查
RUN apt-get update && apt-get install -y wget && rm -rf /var/lib/apt/lists/*

# Create a non-root user and group
RUN groupadd -r bgai && useradd -r -g bgai bgai

# Create data and logs directories
RUN mkdir -p /app/data /app/logs && chown -R bgai:bgai /app

# Copy the JAR file from the build stage
COPY --from=build /app/target/*.jar app.jar

# Switch to non-root user for security
USER bgai

# Expose ports
EXPOSE 8080

# Set environment variables
ENV SPRING_PROFILES_ACTIVE=prod
ENV TZ=Asia/Shanghai
ENV JAVA_OPTS="-Xms512m -Xmx1g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=80"

# Start the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"] 
