# Multi-stage Dockerfile for Spring Boot application

#######################
# Build stage
#######################
FROM eclipse-temurin:17-jdk-alpine AS build

WORKDIR /app

# 安装wget用于健康检查
RUN apk add --no-cache wget

# Install necessary tools 
RUN apk add --no-cache bash sed grep

# Copy Maven wrapper and pom.xml first for better layer caching
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Make mvnw executable
RUN chmod +x ./mvnw

# Backup original pom.xml
RUN cp pom.xml pom.xml.original

# Modify pom.xml to use Java 17 instead of 21
RUN sed -i 's/<java.version>21<\/java.version>/<java.version>17<\/java.version>/g' pom.xml && \
    sed -i 's/<source>21<\/source>/<source>17<\/source>/g' pom.xml && \
    sed -i 's/<target>21<\/target>/<target>17<\/target>/g' pom.xml && \
    echo "Modified pom.xml:" && \
    grep -n "java.version\|source\|target" pom.xml

# Copy application source code
COPY src src

# Build the application with explicit Java 17 settings
RUN ./mvnw clean package -DskipTests \
    -Dmaven.compiler.source=17 \
    -Dmaven.compiler.target=17 \
    -Djava.version=17

#######################
# Runtime stage
#######################
FROM eclipse-temurin:17-jre-alpine

# Install additional dependencies needed for image processing and OCR
RUN apk add --no-cache \
    # Required for PDF processing and OCR
    tesseract-ocr \
    tesseract-ocr-data-chi_sim \
    tesseract-ocr-data-eng \
    # Required for video processing
    ffmpeg \
    # Required for image processing
    libpng \
    libjpeg-turbo \
    tiff \
    # Required for wget (healthcheck)
    wget

# Create a non-root user
RUN addgroup -S bgai && adduser -S bgai -G bgai

# Set the working directory
WORKDIR /app

# 安装wget用于健康检查
RUN apk add --no-cache wget

# Create a data directory and make it writable
RUN mkdir -p /app/data && chown -R bgai:bgai /app

# Copy the JAR file from the build stage
COPY --from=build /app/target/*.jar app.jar

# Switch to non-root user for security
USER bgai

# Expose ports
EXPOSE 8080

# Set environment variables
ENV SPRING_PROFILES_ACTIVE=prod
ENV TZ=Asia/Shanghai
ENV JAVA_OPTS="-Xms512m -Xmx1g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=80"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
  CMD wget -q --spider http://localhost:8080/actuator/health || exit 1

# Start the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"] 
